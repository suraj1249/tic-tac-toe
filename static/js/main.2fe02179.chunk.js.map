{"version":3,"sources":["components/players/piece.js","components/box/box.js","components/board/board.js","components/modal/modalComponent.js","components/modal/index.js","App.js","reportWebVitals.js","index.js"],"names":["Piece","text","className","Box","props","theme","currentTurn","setCurrentTurn","keyValue","moves","setMoves","onClick","event","parseInt","target","id","handleOnClick","Board","setResult","setOpen","useState","winner","setWinner","possibleWins","useEffect","Object","keys","length","forEach","scenario","key","grid","Array","fill","map","i","rowNum","colNum","useStyles","makeStyles","modal","display","alignItems","justifyContent","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","Modal","classes","open","subject","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","App","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fe02179.chunk.js","sourcesContent":["import \"../../App.css\"\nconst Piece = ({text}) => {\n    return <div className={`piece_${text}`}>{text}</div>\n}\n\nexport default Piece;","import React, {useState} from 'react'\nimport '../../App.css'\nimport Piece from '../players/piece'\n\nconst Box = (props) => {\n    const {theme,currentTurn, setCurrentTurn,keyValue,moves,setMoves} = props\n    const handleOnClick = (event) => {\n        if (!moves[keyValue]){\n            currentTurn === 'X' ? setCurrentTurn('0'): setCurrentTurn('X');\n            setMoves({...moves,[parseInt(event.target.id)]:currentTurn});\n\n        }\n    }\n\n    return <div onClick= {(event)=> handleOnClick(event)} className={ `box-${theme}` } id={keyValue}>\n            <Piece text={moves[keyValue]}/>\n        </div>\n}\n\nexport default Box;","import \"../../App.css\";\nimport Box from '../box/box';\nimport React, { useEffect, useState } from \"react\";\n\nconst Board = ({setResult, setOpen,moves, setMoves,currentTurn,setCurrentTurn})=> {\n    const [winner, setWinner] = useState(0);\n    const possibleWins = [[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]]\n    const checkWinner = () => {\n        Object.keys(moves).length > 4 && possibleWins.forEach((scenario)=>{\n                if (moves[scenario[0]]===moves[scenario[1]]&& moves[scenario[1]]===moves[scenario[2]]){\n                    if(moves[scenario[0]]==='X'){\n                        setResult('Congrations!!! Player X Won')\n                        setOpen(true)\n                    }else if(moves[scenario[0]]==='0'){\n                        setResult('Congrations!!! Player 0 Won')\n                        setOpen(true)\n                    }\n                }\n                else if (Object.keys(moves).length===9){\n                    setResult('Match Drawn!!!')\n                    setOpen(true)\n                }\n        });\n    }\n\n    useEffect(()=> {\n        checkWinner()    \n    },[moves,winner])\n    let key =0;\n    const grid = Array(3).fill(0).map((i,rowNum)=>\n        {\n            return Array(3).fill(0).map((i,colNum)=>{\n                let theme = 'light'\n                if (rowNum%2===0){\n                    theme = colNum%2===1? 'light' : \"dark\" \n                }else {\n                    theme = colNum%2===0? 'light' : \"dark\" \n                }\n                return <Box \n                            theme={theme} \n                            currentTurn={currentTurn} \n                            setCurrentTurn={setCurrentTurn}\n                            moves={moves}\n                            setMoves={setMoves}\n                            keyValue={key}\n                            key={key++}\n                            setWinner={setWinner}\n                        />\n            }) \n        });\n    return (<div className=\"board\">\n        {\n            grid\n        }\n    </div>)\n}\n\nexport default Board;","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\n\nconst useStyles = makeStyles((theme) => ({\n    modal: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    paper: {\n      backgroundColor: theme.palette.background.paper,\n      border: '2px solid #000',\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing(2, 4, 3),\n    },\n  }));\n\n  \nconst ModalComponent = (props)=>{\n    const classes = useStyles();\n    const {open,setOpen,subject,setMoves,setCurrentTurn} = props;\n    const handleClose = ()=> {\n        setOpen(false)\n        setMoves({})\n        setCurrentTurn('X')\n    }\n    return (\n        <div>\n          <Modal\n            aria-labelledby=\"transition-modal-title\"\n            aria-describedby=\"transition-modal-description\"\n            className={classes.modal}\n            open={open}\n            onClose={handleClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n              timeout: 500,\n            }}\n          >\n            <Fade in={open}>\n              <div className={classes.paper}>\n                <h2 id=\"transition-modal-title\">Result</h2>\n                <p id=\"transition-modal-description\">{subject}</p>\n              </div>\n            </Fade>\n          </Modal>\n        </div>)\n    \n}\n\nexport default ModalComponent;","import Modal from \"./modalComponent\"\n\nexport default Modal;","import Board from \"./components/board/board\";\nimport Modal from \"./components/modal\"\nimport {useState} from \"react\";\nimport './App.css';\n\nfunction App() {\n  const [currentTurn,setCurrentTurn] = useState('X');\n  const [open,setOpen]=useState(false);\n  const [result,setResult] = useState('');\n  const [moves,setMoves] = useState({})\n  return (\n    <div className=\"App\">\n      <Modal\n        open={open}\n        setOpen={setOpen}\n        subject={result}\n        setMoves={setMoves}\n        setCurrentTurn={setCurrentTurn}\n      />\n      <Board\n        setOpen={setOpen}\n        setResult={setResult}\n        moves={moves}\n        setMoves={setMoves}\n        currentTurn={currentTurn}\n        setCurrentTurn={setCurrentTurn}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}